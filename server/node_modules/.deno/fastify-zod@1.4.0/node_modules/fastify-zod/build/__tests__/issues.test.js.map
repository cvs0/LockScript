{"version":3,"file":"issues.test.js","names":["_fastify","_interopRequireDefault","require","_zod","_","obj","__esModule","default","test","productInput","title","z","string","price","number","content","optional","productGenerated","id","createdAt","updatedAt","createProductSchema","object","productResponseSchema","productsResponseSchema","array","buildJsonSchemas","userCoreSchema","email","required_error","invalid_type_error","name","createUserSchema","password","createUserResponseSchema","loginSchema","loginResponseSchema","accessToken","Name","kind","literal","lastName","Address","street","postcode","UserDetails","union","Unknown","unknown","jsonSchemas","f","register","fastify","zod","get","operationId","querystring","reply","query","inject","method","url","then","res","json","expect","toEqual","code","error","message","statusCode","address"],"sources":["../../src/__tests__/issues.test.ts"],"sourcesContent":["import fastify from \"fastify\";\nimport { z } from \"zod\";\n\nimport { buildJsonSchemas, register } from \"..\";\n\ntest(`fix #8`, () => {\n  const productInput = {\n    title: z.string(),\n    price: z.number(),\n    content: z.string().optional(),\n  };\n\n  const productGenerated = {\n    id: z.number(),\n    createdAt: z.string(),\n    updatedAt: z.string(),\n  };\n\n  const createProductSchema = z.object({\n    ...productInput,\n  });\n\n  const productResponseSchema = z.object({\n    ...productInput,\n    ...productGenerated,\n  });\n\n  const productsResponseSchema = z.array(productResponseSchema);\n\n  buildJsonSchemas({\n    createProductSchema,\n    productResponseSchema,\n    productsResponseSchema,\n  });\n\n  const userCoreSchema = {\n    email: z\n      .string({\n        required_error: `Email is required`,\n        invalid_type_error: `Email must be a string`,\n      })\n      .email(),\n    name: z.string(),\n  };\n\n  const createUserSchema = z.object({\n    ...userCoreSchema,\n    password: z.string({\n      required_error: `Password is required`,\n      invalid_type_error: `Password must be a string`,\n    }),\n  });\n\n  const createUserResponseSchema = z.object({\n    ...userCoreSchema,\n    id: z.number(),\n  });\n\n  const loginSchema = z.object({\n    email: z\n      .string({\n        required_error: `Email is required`,\n        invalid_type_error: `Email must be a string`,\n      })\n      .email(),\n    password: z.string(),\n  });\n\n  const loginResponseSchema = z.object({\n    accessToken: z.string(),\n  });\n\n  buildJsonSchemas({\n    createUserSchema,\n    createUserResponseSchema,\n    loginSchema,\n    loginResponseSchema,\n  });\n});\n\ntest(`fix #14, #17`, async () => {\n  const Name = z.object({\n    kind: z.literal(`name`),\n    name: z.string(),\n    lastName: z.string(),\n  });\n\n  const Address = z.object({\n    kind: z.literal(`address`),\n    street: z.string(),\n    postcode: z.string(),\n  });\n\n  const UserDetails = z.union([Name, Address]);\n\n  const Unknown = z.unknown();\n\n  const jsonSchemas = buildJsonSchemas({ UserDetails, Unknown }, {});\n\n  const f = await register(fastify(), {\n    jsonSchemas,\n  });\n\n  f.zod.get(\n    `/`,\n    {\n      operationId: `getUserDetails`,\n      querystring: `UserDetails`,\n      reply: `UserDetails`,\n    },\n    async ({ query }) => query,\n  );\n\n  const name = await f\n    .inject({ method: `get`, url: `/`, query: { kind: `name` } })\n    .then((res) => res.json());\n\n  expect(name).toEqual({\n    code: `FST_ERR_VALIDATION`,\n    error: `Bad Request`,\n    message: `querystring must have required property 'name', querystring must have required property 'street', querystring must match a schema in anyOf`,\n    statusCode: 400,\n  });\n\n  const address = await f\n    .inject({ method: `get`, url: `/`, query: { kind: `address` } })\n    .then((res) => res.json());\n\n  expect(address).toEqual({\n    code: `FST_ERR_VALIDATION`,\n    error: `Bad Request`,\n    message: `querystring must have required property 'name', querystring must have required property 'street', querystring must match a schema in anyOf`,\n    statusCode: 400,\n  });\n});\n"],"mappings":"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"}