{"version":3,"file":"openapi-client.test.js","names":["_typedJestExpect","require","_testOpenapiClient","_","_models","_server","test","f","createTestServer","jsonSchemas","buildJsonSchemas","models","transformSpec","swaggerOptions","openApiOptions","swaggerUiOptions","basePath","listen","port","client","DefaultApi","Configuration","fetchApi","global","fetch","tExpect","getTodoItems","resolves","toEqual","todoItems","postTodoItem","schemaTodoItem","id","label","state","SchemaTodoState","Todo","dueDateMs","Date","getTime","close"],"sources":["../../src/__tests__/openapi-client.test.ts"],"sourcesContent":["import { tExpect } from \"typed-jest-expect\";\n\nimport {\n  Configuration,\n  DefaultApi,\n  SchemaTodoState,\n} from \"../../test-openapi-client\";\nimport { buildJsonSchemas } from \"..\";\n\nimport { models } from \"./models.fixtures\";\nimport {\n  createTestServer,\n  openApiOptions,\n  swaggerUiOptions,\n} from \"./server.fixtures\";\n\ntest(`openapi-client`, async () => {\n  const f = await createTestServer(\n    {},\n    {\n      jsonSchemas: buildJsonSchemas(models, {}),\n      transformSpec: {},\n      swaggerOptions: {\n        ...openApiOptions,\n      },\n      swaggerUiOptions,\n    },\n  );\n\n  const basePath = await f.listen({ port: 0 });\n\n  try {\n    const client = new DefaultApi(\n      new Configuration({ basePath, fetchApi: global.fetch }),\n    );\n\n    await tExpect(client.getTodoItems()).resolves.toEqual({ todoItems: [] });\n\n    await tExpect(\n      client.postTodoItem({\n        schemaTodoItem: {\n          id: `e7f7082a-4f16-430d-8c3b-db6b8d4d3e73`,\n          label: `todo`,\n          state: SchemaTodoState.Todo,\n          dueDateMs: new Date(1337).getTime(),\n        },\n      }),\n    ).resolves.toEqual({\n      todoItems: [\n        {\n          id: `e7f7082a-4f16-430d-8c3b-db6b8d4d3e73`,\n          label: `todo`,\n          state: SchemaTodoState.Todo,\n          dueDateMs: new Date(1337).getTime(),\n        },\n      ],\n    });\n  } finally {\n    await f.close();\n  }\n});\n"],"mappings":";;AAAA,IAAAA,gBAAA,GAAAC,OAAA;AAEA,IAAAC,kBAAA,GAAAD,OAAA;AAKA,IAAAE,CAAA,GAAAF,OAAA;AAEA,IAAAG,OAAA,GAAAH,OAAA;AACA,IAAAI,OAAA,GAAAJ,OAAA;AAMAK,IAAI,CAAE,gBAAe,EAAE,YAAY;EACjC,MAAMC,CAAC,GAAG,MAAM,IAAAC,wBAAgB,EAC9B,CAAC,CAAC,EACF;IACEC,WAAW,EAAE,IAAAC,kBAAgB,EAACC,cAAM,EAAE,CAAC,CAAC,CAAC;IACzCC,aAAa,EAAE,CAAC,CAAC;IACjBC,cAAc,EAAE;MACd,GAAGC;IACL,CAAC;IACDC,gBAAgB,EAAhBA;EACF,CACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAMT,CAAC,CAACU,MAAM,CAAC;IAAEC,IAAI,EAAE;EAAE,CAAC,CAAC;EAE5C,IAAI;IACF,MAAMC,MAAM,GAAG,IAAIC,6BAAU,CAC3B,IAAIC,gCAAa,CAAC;MAAEL,QAAQ;MAAEM,QAAQ,EAAEC,MAAM,CAACC;IAAM,CAAC,CACxD,CAAC;IAED,MAAM,IAAAC,wBAAO,EAACN,MAAM,CAACO,YAAY,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,OAAO,CAAC;MAAEC,SAAS,EAAE;IAAG,CAAC,CAAC;IAExE,MAAM,IAAAJ,wBAAO,EACXN,MAAM,CAACW,YAAY,CAAC;MAClBC,cAAc,EAAE;QACdC,EAAE,EAAG,sCAAqC;QAC1CC,KAAK,EAAG,MAAK;QACbC,KAAK,EAAEC,kCAAe,CAACC,IAAI;QAC3BC,SAAS,EAAE,IAAIC,IAAI,CAAC,IAAI,CAAC,CAACC,OAAO,CAAC;MACpC;IACF,CAAC,CACH,CAAC,CAACZ,QAAQ,CAACC,OAAO,CAAC;MACjBC,SAAS,EAAE,CACT;QACEG,EAAE,EAAG,sCAAqC;QAC1CC,KAAK,EAAG,MAAK;QACbC,KAAK,EAAEC,kCAAe,CAACC,IAAI;QAC3BC,SAAS,EAAE,IAAIC,IAAI,CAAC,IAAI,CAAC,CAACC,OAAO,CAAC;MACpC,CAAC;IAEL,CAAC,CAAC;EACJ,CAAC,SAAS;IACR,MAAMhC,CAAC,CAACiC,KAAK,CAAC,CAAC;EACjB;AACF,CAAC,CAAC"}