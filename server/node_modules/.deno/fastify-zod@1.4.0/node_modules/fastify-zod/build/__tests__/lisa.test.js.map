{"version":3,"file":"lisa.test.js","names":["_promises","require","_path","_SpecTransformer","test","originalSpec","JSON","parse","readFile","join","__dirname","encoding","t","SpecTransformer","$ref","key","result","transform","mergeRefs","schemaKeys","removeInitialSchemasPrefix","changeCase","writeFile","stringify","transformedSpec","expect","toEqual"],"sources":["../../src/__tests__/lisa.test.ts"],"sourcesContent":["import { readFile, writeFile } from \"fs/promises\";\nimport { join } from \"path\";\n\nimport { SpecTransformer } from \"../SpecTransformer\";\n\ntest(`lisa`, async () => {\n  const originalSpec = JSON.parse(\n    await readFile(\n      join(\n        __dirname,\n        `..`,\n        `..`,\n        `src`,\n        `__tests__`,\n        `lisa.openapi.original.fixtures.json`,\n      ),\n      {\n        encoding: `utf-8`,\n      },\n    ),\n  );\n  const t = new SpecTransformer(originalSpec);\n\n  const $ref = (key: string) =>\n    ({\n      $ref: `T#/properties/${key}`,\n    } as const);\n\n  const result = t.transform({\n    mergeRefs: [\n      $ref(`JsonRecord`),\n      $ref(`Uuid`),\n      $ref(`Email`),\n      $ref(`UserEmail`),\n      $ref(`GroupRole`),\n      $ref(`ParticipantRole`),\n      $ref(`ParticipantId`),\n      $ref(`ParticipantGroupId`),\n      $ref(`UserParticipantRelationship`),\n    ],\n    schemaKeys: {\n      removeInitialSchemasPrefix: true,\n      changeCase: `PascalCase`,\n    },\n  });\n\n  await writeFile(\n    join(\n      __dirname,\n      `..`,\n      `..`,\n      `src`,\n      `__tests__`,\n      `lisa.openapi.transformed.fixtures.json`,\n    ),\n    JSON.stringify(result, null, 2),\n    { encoding: `utf-8` },\n  );\n\n  const transformedSpec = JSON.parse(\n    await readFile(\n      join(\n        __dirname,\n        `..`,\n        `..`,\n        `src`,\n        `__tests__`,\n        `lisa.openapi.transformed.fixtures.json`,\n      ),\n      { encoding: `utf-8` },\n    ),\n  );\n\n  expect(result).toEqual(transformedSpec);\n});\n"],"mappings":";;AAAA,IAAAA,SAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AAEA,IAAAE,gBAAA,GAAAF,OAAA;AAEAG,IAAI,CAAE,MAAK,EAAE,YAAY;EACvB,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAC7B,MAAM,IAAAC,kBAAQ,EACZ,IAAAC,UAAI,EACFC,SAAS,EACR,IAAG,EACH,IAAG,EACH,KAAI,EACJ,WAAU,EACV,qCACH,CAAC,EACD;IACEC,QAAQ,EAAG;EACb,CACF,CACF,CAAC;EACD,MAAMC,CAAC,GAAG,IAAIC,gCAAe,CAACR,YAAY,CAAC;EAE3C,MAAMS,IAAI,GAAIC,GAAW,KACtB;IACCD,IAAI,EAAG,iBAAgBC,GAAI;EAC7B,CAAC,CAAU;EAEb,MAAMC,MAAM,GAAGJ,CAAC,CAACK,SAAS,CAAC;IACzBC,SAAS,EAAE,CACTJ,IAAI,CAAE,YAAW,CAAC,EAClBA,IAAI,CAAE,MAAK,CAAC,EACZA,IAAI,CAAE,OAAM,CAAC,EACbA,IAAI,CAAE,WAAU,CAAC,EACjBA,IAAI,CAAE,WAAU,CAAC,EACjBA,IAAI,CAAE,iBAAgB,CAAC,EACvBA,IAAI,CAAE,eAAc,CAAC,EACrBA,IAAI,CAAE,oBAAmB,CAAC,EAC1BA,IAAI,CAAE,6BAA4B,CAAC,CACpC;IACDK,UAAU,EAAE;MACVC,0BAA0B,EAAE,IAAI;MAChCC,UAAU,EAAG;IACf;EACF,CAAC,CAAC;EAEF,MAAM,IAAAC,mBAAS,EACb,IAAAb,UAAI,EACFC,SAAS,EACR,IAAG,EACH,IAAG,EACH,KAAI,EACJ,WAAU,EACV,wCACH,CAAC,EACDJ,IAAI,CAACiB,SAAS,CAACP,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,EAC/B;IAAEL,QAAQ,EAAG;EAAO,CACtB,CAAC;EAED,MAAMa,eAAe,GAAGlB,IAAI,CAACC,KAAK,CAChC,MAAM,IAAAC,kBAAQ,EACZ,IAAAC,UAAI,EACFC,SAAS,EACR,IAAG,EACH,IAAG,EACH,KAAI,EACJ,WAAU,EACV,wCACH,CAAC,EACD;IAAEC,QAAQ,EAAG;EAAO,CACtB,CACF,CAAC;EAEDc,MAAM,CAACT,MAAM,CAAC,CAACU,OAAO,CAACF,eAAe,CAAC;AACzC,CAAC,CAAC"}