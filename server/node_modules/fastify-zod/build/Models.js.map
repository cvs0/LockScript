{"version":3,"file":"Models.js","names":[],"sources":["../src/Models.ts"],"sourcesContent":["import { z, ZodType } from \"zod\";\n\nexport type Models<Key extends string = string> = {\n  readonly [K in Key]: ZodType<unknown>;\n};\n\nexport type SchemaKey<M extends Models> = M extends Models<infer Key>\n  ? Key & string\n  : never;\n\nexport type SchemaKeyOrDescription<M extends Models> =\n  | SchemaKey<M>\n  | {\n      readonly description: string;\n      readonly key: SchemaKey<M>;\n    };\n\ntype SchemaType<M extends Models, Key extends SchemaKey<M>> = z.infer<M[Key]>;\n\nexport type SchemaTypeOption<\n  M extends Models,\n  Key extends void | SchemaKey<M>,\n> = Key extends SchemaKey<M> ? SchemaType<M, Key> : void;\n"],"mappings":""}